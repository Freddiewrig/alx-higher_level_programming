# Test cases for matrix_divided function

# Test Case 1
>>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
>>> div = 2
>>> matrix_divided(matrix, div)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0], [3.5, 4.0, 4.5]]

# Test Case 2
>>> matrix = [[-10, -5, 0], [5, 10, 15], [20, 25, 30]]
>>> div = 5
>>> matrix_divided(matrix, div)
[[-2.0, -1.0, 0.0], [1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

# Test Case 3
>>> matrix = [[0.5, 1.5, 2.5], [3.5, 4.5, 5.5]]
>>> div = 0.5
>>> matrix_divided(matrix, div)
[[1.0, 3.0, 5.0], [7.0, 9.0, 11.0]]

# Test Case 4 (Raises TypeError for non-numeric matrix)
>>> matrix = [["a", "b", "c"], [1, 2, 3]]
>>> div = 2
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test Case 5 (Raises TypeError for rows with different sizes)
>>> matrix = [[1, 2, 3], [4, 5], [6, 7, 8]]
>>> div = 2
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

# Test Case 6 (Raises TypeError for div not being a number)
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> div = "a"
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
...
TypeError: div must be a number

# Test Case 7 (Raises ZeroDivisionError for div equal to 0)
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> div = 0
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

